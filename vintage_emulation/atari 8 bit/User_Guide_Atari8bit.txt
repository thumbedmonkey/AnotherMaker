Atari 400/800/XL/XE emulator for Raspberry Pi

User Guide:
==========

For writing image to micro sd card, I recommend Etcher, with a very user friendly interface.
Here are several versions of Etcher for download, depending on the OS version you are using:
https://www.balena.io/etcher/
https://www.filehippofilex.com/etcher/
Its even support zip packed files, so you dont need to unpack your img file at all.
Just drag and drop zip image file to Etcher, click on Flash button and wait for it to finish.

Its very important that you have a quality micro sd card, which leaves as much free space as described.
Cheap cards often leaves slightly less space than the declared and then there may not be enough space to write a disc image.
For the best performance, a quality 16 Gb (class 10) microsd card or larger is recommended.
This image was designed to work on any LCD TV (full HD or HD ready), with HDMI connectivity.


Emulator usage:
==============

Keyboard, joystick and other controllers:
========================================

F1                   Built in user interface
F2                   Option key
F3                   Select key
F4                   Start key
F5                   Reset key ("warm reset")
Shift+F5             Reboot ("cold reset")
F6                   Help key (XL/XE only)
F7                   Break key
F8                   Enter monitor
F9                   Exit emulator
F10                  Save screenshot
Shift+F10            Save interlaced screenshot
F12                  Turbo mode
Alt+R                Run Atari program
Alt+D                Disk management
Alt+C                Cartridge management
Alt+T                Tape management
Alt+Y                Select system
Alt+O                Sound settings
Alt+W                Sound recording start/stop
Alt+S                Save state file
Alt+L                Load state file
Alt+A                About the emulator
Insert               Insert line (Atari Shift+'>')
Ctrl+Insert          Insert character (Atari Ctrl+'>')
Shift+Ctrl+Insert    Shift+Ctrl+'>'
Delete               Delete line (Atari Shift+Backspace)
Shift+Backspace      Delete line (Atari Shift+Backspace)
Ctrl+Delete          Delete character (Atari Ctrl+Backspace)
Ctrl+Backspace       Delete character (Atari Ctrl+Backspace)
Shift+Ctrl+Delete    Shift+Ctrl+Backspace
Shift+Ctrl+Backspace Shift+Ctrl+Backspace
Home                 Clear (Atari Shift+'<')
Ctrl+Home            Ctrl+'<' (also clears screen)
Shift+Ctrl+Home      Shift+Ctrl+'<'
~                    Inverse video
Up                   Up (Atari Ctrl+'-')
Down                 Down (Atari Ctrl+'=')
Left                 Left (Atari ctrl+'+')
Right                Right (Atari ctrl+'*')
Ctrl+Up              -
Ctrl+Down            =
Ctrl+Left            +
Ctrl+Right           *
Shift+Up             _ (Atari Shift+'-')
Shift+Down           | (Atari Shift+'=')
Shift+Left           \ (Atari Shift+'+')
Shift+Right          ^ (Atari Shift+'*')
Shift+Ctrl+Up        Shift+Ctrl+-
Shift+Ctrl+Down      Shift+Ctrl+=
Ctrl+'\'             Ctrl+Esc  (Workaround for Windows)
Shift+Ctrl+'\'       Shift+Ctrl+Esc (Workaround for Windows)

CX85 Keypad (if enabled):
host keypad 0123456789-.   0123456789-.
host keypad /              NO
host keypad Ctrl+/         ESCAPE
host keypad *              DELETE
host keypad +              YES
host keypad Enter          +ENTER


Joystick 0 is operated by the numeric keypad (make sure that the numeric
keypad has been enabled).

        7 8 9
         \|/
        4 5 6
         /|\
        1 2 3

        And 0 is the fire key.

Mouse is not supported.


SDL keyboard, joystick and other controllers
--------------------------------------------
`          Atari/Inverse key
LSUPER     Atari/Inverse key (unusable under Windows)
RSUPER     CapsToggle (+Shift = CapsLock)

LAlt+F     Switch fullscreen
LAlt+G     Switch visible horizontal area. See -horiz-area.
LAlt+J     Swap joysticks 0 and 1
LAlt+M     Grab mouse (prevents mouse pointer from leaving the window)

LAlt+LShift+1     Decrease tint (also called hue)
LAlt+1            Increase tint
LAlt+LShift+2     Decrease saturation (like TV Colour control)
LAlt+2            Increase saturation
LAlt+LShift+3     Decrease contrast (also called white level)
LAlt+3            Increase contrast
LAlt+LShift+4     Decrease brightness (also called black level)
LAlt+4            Increase brightness
LAlt+LShift+5     Decrease gamma adjustment
LAlt+5            Increase gamma adjustment
LAlt+LShift+6     Decrease color delay (Atari color adjustment potentiometer)
LAlt+6            Increase color delay

The following keys work only in the NTSC filter mode (-ntscemu):
LAlt+LShift+7     Decrease sharpness
LAlt+7            Increase sharpness
LAlt+LShift+8     Decrease resolution
LAlt+8            Increase resolution
LAlt+LShift+9     Decrease artifacts
LAlt+9            Increase artifacts
LAlt+LShift+0     Decrease fringing
LAlt+0            Increase fringing
LAlt+LShift+-     Decrease bleed
LAlt+-            Increase bleed
LAlt+LShift+=     Decrease burst phase (use this to change artifacting colours)
LAlt+=            Increase burst phase
LAlt+LShift+[     Decrease scanlines percentage
LAlt+[            Increase scanlines percentage
LAlt+]            Toggle NTSC composite/S-Video/RGB/monochrome settings
 
LAlt+Shift+X      Enable/disable 80 column screen (for -xep80/-af80/-proto80)

Apart from standard joysticks (handled by the SDL) up to two keyboard joysticks
are supported. The keys used for joystick directions and the trigger can be
freely defined in the config UI (Controller Config -> Define layout).
Keyboard joystick emulation can be enabled/disabled in the Controller Config.
By default, joy 0 is enabled and joy 1 is disabled (to not steal normal
AWDS keys in the emulator).


X11 keyboard, joystick and other controllers
--------------------------------------------

Alt        Atari/Inverse key (either Alt key will work)

Joystick 0 is operated by the mouse position relative to the center of the
screen. The mouse button acts as the trigger. On Linux, standard joysticks
are also supported.



Cassette operation:
==================

There is support for loading and saving from/to CAS tape images. It is also
possible to select raw files (DOS binaries, bootable programs, BASIC programs
etc.) as tape images, but only for loading. Upon attaching a tape image, the
emulator acts as if the tape recorder's "Play" button was permanently pressed,
so that a tape rolls automatically when an Atari program turns the tape motor
on.

Turning the SIO patch on speeds up the tape load and save operations. Note
that toggling the SIO patch during any tape operation will cause it to fail.

A tape image can be rewound to a specific part (block), to allow loading
from tape images which contain multiple programs one-after-another. After
rewinding the "Record" option is automatically turned off. Rewinding will
cause any tape operation being in progress to fail.

When a tape image is attached to Atari800, only loading from it is possible.
Before saving data on the tape, a user has to manually switch the "Record"
option to "yes", in the same way as one would manually press/release the
"Record" button on a physical tape recorder. Remember to disable the "Record"
option before loading from tape. Note that switching the "Record" option
on/off during any tape operation will cause it to fail and may cause random
data to be saved to a tape image.

With the SIO patch active, the emulator automatically recognises whether
a load or save operation is requested. and it is not necessary to touch the
"Record" option. This can lead to unwanted changes in a tape file. To avoid
the problem, a user can mark the attached cassette image as read-only to
disallow any write operations.

Saving to tape always casues the new blocks to be appended at the end of the
tape image, regardless of the tape's current position. It is not possible
to overwrite existing data on the tape.

A user can create a new empty CAS tape image with the "Make blank tape"
option. The user then provides the image's filename and its description
(stored in the CAS image's header; may be left empty). The created image is
automatically attached to Atari800 with the "Record" option turned on, which
allows to go straight to saving the data. Creating an image with the filename
pointing to an existing file will cause that file to be cleared.

Only standard blocks can be loaded or saved. Any copy protection that relies
on non-standard signals is not supported. Additionally, saving is only
supported with the standard speed of 600 baud.

Saving the emulator's state during a tape loading/saving is not supported. The
current tape operation is not stored in the savestate and it will not be
restored properly when that savestate is later loaded.

The following file types are currently supported:
- disk images: ATR, XFD, ATR.GZ/ATZ, XFD.GZ/XFZ, DCM, PRO, ATX
- programs: COM/EXE/XEX, BAS, LST
- cartridge images: CAR/CART, ROM (raw)
- tape images: CAS, raw bootable programs
- Atari800 state files: compressed and not compressed
Disk images are mounted in order, e.g. the first file is mounted
to the drive 1, next one to the drive 2, etc.


Enjoy.